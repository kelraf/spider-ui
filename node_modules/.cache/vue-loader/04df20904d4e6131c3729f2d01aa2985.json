{"remainingRequest":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kelraf/code_it/vue/spider-ui/theme/src/pages/charts/chartist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kelraf/code_it/vue/spider-ui/theme/src/pages/charts/chartist.vue","mtime":1573647379000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as Chartist from 'chartist';\nvar seq = 0;\nvar delays = 80;\nvar durations = 500;\nexport default {\n  data() {\n    return {\n      chart1 : {\n        data: {\n          labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n          series: [\n            [12, 9, 7, 8, 5, 4, 6, 2, 3, 3, 4, 6],\n            [4,  5, 3, 7, 3, 5, 5, 3, 4, 4, 5, 5],\n            [5,  3, 4, 5, 6, 3, 3, 4, 5, 6, 3, 4],\n            [3,  4, 5, 6, 7, 6, 4, 5, 6, 7, 6, 3]\n          ]\n        },\n        options: {\n            low: 0,\n            showArea: false,\n            fullWidth: true,\n        },\n        eventHandlers : [{\n            event: 'draw',\n            fn(data) {\n                seq++;\n                if(data.type === 'line') {\n                  data.element.animate({\n                      opacity: {\n                      begin: seq * delays + 1000,\n                      dur: durations,\n                      from: 0,\n                      to: 1\n                      }\n                  });\n                  } else if(data.type === 'label' && data.axis === 'x') {\n                  data.element.animate({\n                      y: {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data.y + 100,\n                      to: data.y,\n                      easing: 'easeOutQuart'\n                      }\n                  });\n                  } else if(data.type === 'label' && data.axis === 'y') {\n                  data.element.animate({\n                      x: {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data.x - 100,\n                      to: data.x,\n                      easing: 'easeOutQuart'\n                      }\n                  });\n                  } else if(data.type === 'point') {\n                  data.element.animate({\n                      x1: {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data.x - 10,\n                      to: data.x,\n                      easing: 'easeOutQuart'\n                      },\n                      x2: {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data.x - 10,\n                      to: data.x,\n                      easing: 'easeOutQuart'\n                      },\n                      opacity: {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: 0,\n                      to: 1,\n                      easing: 'easeOutQuart'\n                      }\n                  });\n                  } else if(data.type === 'grid') {\n                  var pos1Animation = {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data[data.axis.units.pos + '1'] - 30,\n                      to: data[data.axis.units.pos + '1'],\n                      easing: 'easeOutQuart'\n                  };\n                  var pos2Animation = {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data[data.axis.units.pos + '2'] - 100,\n                      to: data[data.axis.units.pos + '2'],\n                      easing: 'easeOutQuart'\n                  };\n                  var animations = {};\n                    animations[data.axis.units.pos + '1'] = pos1Animation;\n                    animations[data.axis.units.pos + '2'] = pos2Animation;\n                    animations['opacity'] = {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: 0,\n                      to: 1,\n                      easing: 'easeOutQuart'\n                  };\n              data.element.animate(animations);\n              }\n            }\n        }]\n      },\n      chart2 : {\n        data: {\n          labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n          series: [\n            [1, 5, 2, 5, 4, 3],\n            [2, 3, 4, 8, 1, 2],\n            [5, 4, 3, 2, 1, 0.5]\n          ]\n        },\n        options: {\n          low: 0,\n          showArea: true,\n          showPoint: false,\n          fullWidth: true,\n        },\n        eventHandlers : [{\n            event: 'draw',\n            fn(data) {\n              if(data.type === 'line' || data.type === 'area') {\n                data.element.animate({\n                    d: {\n                    begin: 2000 * data.index,\n                    dur: 2000,\n                    from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n                    to: data.path.clone().stringify(),\n                    easing: Chartist.Svg.Easing.easeOutQuint\n                    }\n                });\n              }\n            }\n        }]\n      },\n      chart3 : {\n        data: {\n          series: [10, 20, 50, 20, 5, 50, 15],\n          labels: [1, 2, 3, 4, 5, 6, 7]\n        },\n        options: {\n          donut: true,\n          showLabel: false,\n        },\n        eventHandlers : [{\n            event: 'draw',\n            fn(data) {\n              if(data.type === 'slice') {\n                var pathLength = data.element._node.getTotalLength();\n                data.element.attr({\n                    'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'\n                });\n                var animationDefinition = {\n                  'stroke-dashoffset': {\n                  id: 'anim' + data.index,\n                  dur: 1000,\n                  from: -pathLength + 'px',\n                  to:  '0px',\n                  easing: Chartist.Svg.Easing.easeOutQuint,\n                  fill: 'freeze'\n                  }\n                };\n                data.element.attr({\n                    'stroke-dashoffset': -pathLength + 'px'\n                });\n                data.element.animate(animationDefinition, false);\n              } \n            }\n        }]\n      },\n      chart4 : {\n        data: {\n          abels: [1, 2, 3, 4, 5, 6, 7, 8],\n          series: [\n            [1, 2, 3, 1, -2, 0, 1, 0],\n            [-2, -1, -2, -1, -2.5, -1, -2, -1],\n            [0, 0, 0, 1, 2, 2.5, 2, 1],\n            [2.5, 2, 1, 0.5, 1, 0.5, -1, -2.5]\n          ]\n        },\n        options: {\n          high: 3,\n          low: -3,\n          showArea: true,\n          showLine: false,\n          showPoint: false,\n          fullWidth: true,\n          axisX: {\n          showLabel: false,\n          showGrid: false\n          },\n        },\n      },\n      chart5 : {\n        data: {\n          labels: [1, 2, 3, 4, 5, 6, 7, 8],\n          series: [\n            [5, 9, 7, 8, 5, 3, 5, 4]\n          ]\n        },\n        options: {\n          low: 0,\n          showArea: true,\n        },\n      },\n      chart6 : {\n        data: {\n          labels: ['W1', 'W2', 'W3', 'W4', 'W5', 'W6', 'W7', 'W8', 'W9', 'W10'],\n          series: [\n            [1, 2, 4, 8, 6, -2, -1, -4, -6, -2]\n          ]\n        },\n        options: {\n          high: 10,\n          low: -10,\n          axisX: {\n          labelInterpolationFnc: function(value, index) {\n              return index % 2 === 0 ? value : null;\n          }\n          },\n        },\n      },\n      chart7 : {\n        data: {\n          labels: ['Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10', 'Q11', 'Q13', 'Q14'],\n          series: [\n            [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300],\n            [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300],\n            [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300]\n          ]\n        },\n        options: {\n          stackBars: true,\n          axisY: {\n            labelInterpolationFnc: function(value) {\n                return (value / 1000) + 'k';\n            }\n          },\n        },\n      },\n      chart8 : {\n        data: {\n          labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n          series: [\n            [5, 4, 3, 7, 5, 10, 3],\n            [3, 2, 9, 5, 4, 6, 4]\n          ]\n        },\n        options: {\n          seriesBarDistance: 10,\n          reverseData: true,\n          horizontalBars: true,\n          axisY: {\n            offset: 70\n          },\n        },\n      },\n      chart9 : {\n        data: {\n          labels: ['2010-11', '2011-12', '2012-13', '2013-13', '2014-15', '2015-16', '2016-17', '2017-18'],\n          series: [\n            [0.9, 0.4, 1.5, 4.9, 3, 3.8, 3.8, 1.9],\n            [6.4, 5.7, 7, 4.95, 3, 3.8, 3.8, 1.9],\n            [4.3, 2.3, 3.6, 4.5, 5, 2.8, 3.3, 4.3],\n            [3.8, 4.1, 2.8, 1.8, 2.2, 1.9, 6.7, 2.9]\n          ]\n        },\n        options: {\n          seriesBarDistance: 15,\n          horizontalBars: false,\n          axisY: {\n            offset: 20\n          },\n        },\n        responsiveOptions : [\n            ['screen and (min-width: 1200px) and (max-width: 1366px)', {\n                seriesBarDistance: 10\n           }],\n            ['screen and (max-width: 767px)', {\n                seriesBarDistance: 10\n           }],\n            ['screen and (max-width: 360px)', {\n                seriesBarDistance: 6\n           }]\n        ]\n      },\n      chart10 : {\n        data: {\n          labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n          series: [\n            [12, 9, 7, 8, 5],\n            [2, 1, 3.5, 7, 3],\n            [1, 3, 4, 5, 6]\n          ]\n        },\n        options: {\n          fullWidth: true,\n          chartPadding: {\n            right: 40\n          }\n        },\n      },\n      chart11 : {\n        data: {\n          labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n          series: [\n            [5, 5, 10, 8, 7, 5, 4, null, null, null, 10, 10, 7, 8, 6, 9],\n            [10, 15, null, 12, null, 10, 12, 15, null, null, 12, null, 14, null, null, null],\n            [null, null, null, null, 3, 4, 1, 3, 4,  6,  7,  9, 5, null, null, null],\n            [{x:3, y: 3},{x: 4, y: 3}, {x: 5, y: undefined}, {x: 6, y: 4}, {x: 7, y: null}, {x: 8, y: 4}, {x: 9, y: 4}]\n          ]\n        },\n        options: {\n          fullWidth: true,\n          chartPadding: {\n            right: 10\n          },\n          low: 0\n        },\n      },\n      chart12 : {\n        data: {\n          labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n          series: [\n            [5, 5, 10, 8, 7, 5, 4, null, null, null, 10, 10, 7, 8, 6, 9],\n            [10, 15, null, 12, null, 10, 12, 15, null, null, 12, null, 14, null, null, null],\n            [null, null, null, null, 3, 4, 1, 3, 4,  6,  7,  9, 5, null, null, null],\n            [{x:3, y: 3},{x: 4, y: 3}, {x: 5, y: undefined}, {x: 6, y: 4}, {x: 7, y: null}, {x: 8, y: 4}, {x: 9, y: 4}]\n          ]\n        },\n        options: {\n          fullWidth: true,\n          chartPadding: {\n            right: 10\n          },\n          lineSmooth: Chartist.Interpolation.cardinal({\n              fillHoles: true\n          }),\n          low: 0\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["chartist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"chartist.vue","sourceRoot":"src/pages/charts","sourcesContent":["<template>\n  <div>\n    <Breadcrumbs main=\"Charts\" title=\"Chartist\"/>\n        <!-- Container-fluid starts-->\n        <div class=\"container-fluid\">\n          <div class=\"row chartist-container\">\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Advanced SMIL Animations</h5>\n                </div>\n                <div class=\"card-body\">\n                  <chartist\n                          class=\"ct-6 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Line\"\n                          :data=\"chart1.data\"\n                          :options=\"chart1.options\"\n                          :event-handlers=\"chart1.eventHandlers\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>SVG Path animation</h5>\n                </div>\n                <div class=\"card-body\">\n                  <chartist\n                          class=\"ct-7 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Line\"\n                          :data=\"chart2.data\"\n                          :options=\"chart2.options\"\n                          :event-handlers=\"chart2.eventHandlers\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Animating a Donut with Svg.animate</h5>\n                </div>\n                <div class=\"card-body\">\n                 <chartist\n                          class=\"ct-8 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Pie\"\n                          :data=\"chart3.data\"\n                          :options=\"chart3.options\"\n                          :event-handlers=\"chart3.eventHandlers\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Bi-polar Line chart with area only</h5>\n                </div>\n                <div class=\"card-body\">\n                  <chartist\n                          class=\"ct-5 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Line\"\n                          :data=\"chart4.data\"\n                          :options=\"chart4.options\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Line chart with area</h5>\n                </div>\n                <div class=\"card-body\">\n                  <chartist\n                          class=\"ct-4 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Line\"\n                          :data=\"chart5.data\"\n                          :options=\"chart5.options\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Bi-polar bar chart</h5>\n                </div>\n                <div class=\"card-body\">\n                 <chartist\n                          class=\"ct-9 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Bar\"\n                          :data=\"chart6.data\"\n                          :options=\"chart6.options\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Stacked bar chart</h5>\n                </div>\n                <div class=\"card-body\">\n                  <chartist\n                          class=\"ct-10 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Bar\"\n                          :data=\"chart7.data\"\n                          :options=\"chart7.options\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Horizontal bar chart</h5>\n                </div>\n                <div class=\"card-body\">\n                  <chartist\n                          class=\"ct-11 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Bar\"\n                          :data=\"chart8.data\"\n                          :options=\"chart8.options\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Extreme responsive configuration</h5>\n                </div>\n                <div class=\"card-body\">\n                  <chartist\n                          class=\"ct-12 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Bar\"\n                          :data=\"chart9.data\"\n                          :options=\"chart9.options\"\n                          :responsiveOptions=\"chart9.responsiveOptions\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Simple line chart</h5>\n                </div>\n                <div class=\"card-body\">\n                  <chartist\n                          class=\"ct-1 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Line\"\n                          :data=\"chart10.data\"\n                          :options=\"chart10.options\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Holes in data</h5>\n                </div>\n                <div class=\"card-body\">\n                  <chartist\n                          class=\"ct-2 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Line\"\n                          :data=\"chart11.data\"\n                          :options=\"chart11.options\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-xl-6 col-md-12 col-sm-12\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5>Filled holes in data</h5>\n                </div>\n                <div class=\"card-body\">\n                  <chartist\n                          class=\"ct-3 flot-chart-container\"\n                          ratio=\"ct-major-second\"\n                          type=\"Line\"\n                          :data=\"chart12.data\"\n                          :options=\"chart12.options\">\n                  </chartist>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- Container-fluid Ends-->\n  </div>\n</template>\n<script>\nimport * as Chartist from 'chartist';\nvar seq = 0;\nvar delays = 80;\nvar durations = 500;\nexport default {\n  data() {\n    return {\n      chart1 : {\n        data: {\n          labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n          series: [\n            [12, 9, 7, 8, 5, 4, 6, 2, 3, 3, 4, 6],\n            [4,  5, 3, 7, 3, 5, 5, 3, 4, 4, 5, 5],\n            [5,  3, 4, 5, 6, 3, 3, 4, 5, 6, 3, 4],\n            [3,  4, 5, 6, 7, 6, 4, 5, 6, 7, 6, 3]\n          ]\n        },\n        options: {\n            low: 0,\n            showArea: false,\n            fullWidth: true,\n        },\n        eventHandlers : [{\n            event: 'draw',\n            fn(data) {\n                seq++;\n                if(data.type === 'line') {\n                  data.element.animate({\n                      opacity: {\n                      begin: seq * delays + 1000,\n                      dur: durations,\n                      from: 0,\n                      to: 1\n                      }\n                  });\n                  } else if(data.type === 'label' && data.axis === 'x') {\n                  data.element.animate({\n                      y: {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data.y + 100,\n                      to: data.y,\n                      easing: 'easeOutQuart'\n                      }\n                  });\n                  } else if(data.type === 'label' && data.axis === 'y') {\n                  data.element.animate({\n                      x: {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data.x - 100,\n                      to: data.x,\n                      easing: 'easeOutQuart'\n                      }\n                  });\n                  } else if(data.type === 'point') {\n                  data.element.animate({\n                      x1: {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data.x - 10,\n                      to: data.x,\n                      easing: 'easeOutQuart'\n                      },\n                      x2: {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data.x - 10,\n                      to: data.x,\n                      easing: 'easeOutQuart'\n                      },\n                      opacity: {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: 0,\n                      to: 1,\n                      easing: 'easeOutQuart'\n                      }\n                  });\n                  } else if(data.type === 'grid') {\n                  var pos1Animation = {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data[data.axis.units.pos + '1'] - 30,\n                      to: data[data.axis.units.pos + '1'],\n                      easing: 'easeOutQuart'\n                  };\n                  var pos2Animation = {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: data[data.axis.units.pos + '2'] - 100,\n                      to: data[data.axis.units.pos + '2'],\n                      easing: 'easeOutQuart'\n                  };\n                  var animations = {};\n                    animations[data.axis.units.pos + '1'] = pos1Animation;\n                    animations[data.axis.units.pos + '2'] = pos2Animation;\n                    animations['opacity'] = {\n                      begin: seq * delays,\n                      dur: durations,\n                      from: 0,\n                      to: 1,\n                      easing: 'easeOutQuart'\n                  };\n              data.element.animate(animations);\n              }\n            }\n        }]\n      },\n      chart2 : {\n        data: {\n          labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n          series: [\n            [1, 5, 2, 5, 4, 3],\n            [2, 3, 4, 8, 1, 2],\n            [5, 4, 3, 2, 1, 0.5]\n          ]\n        },\n        options: {\n          low: 0,\n          showArea: true,\n          showPoint: false,\n          fullWidth: true,\n        },\n        eventHandlers : [{\n            event: 'draw',\n            fn(data) {\n              if(data.type === 'line' || data.type === 'area') {\n                data.element.animate({\n                    d: {\n                    begin: 2000 * data.index,\n                    dur: 2000,\n                    from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n                    to: data.path.clone().stringify(),\n                    easing: Chartist.Svg.Easing.easeOutQuint\n                    }\n                });\n              }\n            }\n        }]\n      },\n      chart3 : {\n        data: {\n          series: [10, 20, 50, 20, 5, 50, 15],\n          labels: [1, 2, 3, 4, 5, 6, 7]\n        },\n        options: {\n          donut: true,\n          showLabel: false,\n        },\n        eventHandlers : [{\n            event: 'draw',\n            fn(data) {\n              if(data.type === 'slice') {\n                var pathLength = data.element._node.getTotalLength();\n                data.element.attr({\n                    'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'\n                });\n                var animationDefinition = {\n                  'stroke-dashoffset': {\n                  id: 'anim' + data.index,\n                  dur: 1000,\n                  from: -pathLength + 'px',\n                  to:  '0px',\n                  easing: Chartist.Svg.Easing.easeOutQuint,\n                  fill: 'freeze'\n                  }\n                };\n                data.element.attr({\n                    'stroke-dashoffset': -pathLength + 'px'\n                });\n                data.element.animate(animationDefinition, false);\n              } \n            }\n        }]\n      },\n      chart4 : {\n        data: {\n          abels: [1, 2, 3, 4, 5, 6, 7, 8],\n          series: [\n            [1, 2, 3, 1, -2, 0, 1, 0],\n            [-2, -1, -2, -1, -2.5, -1, -2, -1],\n            [0, 0, 0, 1, 2, 2.5, 2, 1],\n            [2.5, 2, 1, 0.5, 1, 0.5, -1, -2.5]\n          ]\n        },\n        options: {\n          high: 3,\n          low: -3,\n          showArea: true,\n          showLine: false,\n          showPoint: false,\n          fullWidth: true,\n          axisX: {\n          showLabel: false,\n          showGrid: false\n          },\n        },\n      },\n      chart5 : {\n        data: {\n          labels: [1, 2, 3, 4, 5, 6, 7, 8],\n          series: [\n            [5, 9, 7, 8, 5, 3, 5, 4]\n          ]\n        },\n        options: {\n          low: 0,\n          showArea: true,\n        },\n      },\n      chart6 : {\n        data: {\n          labels: ['W1', 'W2', 'W3', 'W4', 'W5', 'W6', 'W7', 'W8', 'W9', 'W10'],\n          series: [\n            [1, 2, 4, 8, 6, -2, -1, -4, -6, -2]\n          ]\n        },\n        options: {\n          high: 10,\n          low: -10,\n          axisX: {\n          labelInterpolationFnc: function(value, index) {\n              return index % 2 === 0 ? value : null;\n          }\n          },\n        },\n      },\n      chart7 : {\n        data: {\n          labels: ['Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10', 'Q11', 'Q13', 'Q14'],\n          series: [\n            [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300],\n            [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300],\n            [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300]\n          ]\n        },\n        options: {\n          stackBars: true,\n          axisY: {\n            labelInterpolationFnc: function(value) {\n                return (value / 1000) + 'k';\n            }\n          },\n        },\n      },\n      chart8 : {\n        data: {\n          labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n          series: [\n            [5, 4, 3, 7, 5, 10, 3],\n            [3, 2, 9, 5, 4, 6, 4]\n          ]\n        },\n        options: {\n          seriesBarDistance: 10,\n          reverseData: true,\n          horizontalBars: true,\n          axisY: {\n            offset: 70\n          },\n        },\n      },\n      chart9 : {\n        data: {\n          labels: ['2010-11', '2011-12', '2012-13', '2013-13', '2014-15', '2015-16', '2016-17', '2017-18'],\n          series: [\n            [0.9, 0.4, 1.5, 4.9, 3, 3.8, 3.8, 1.9],\n            [6.4, 5.7, 7, 4.95, 3, 3.8, 3.8, 1.9],\n            [4.3, 2.3, 3.6, 4.5, 5, 2.8, 3.3, 4.3],\n            [3.8, 4.1, 2.8, 1.8, 2.2, 1.9, 6.7, 2.9]\n          ]\n        },\n        options: {\n          seriesBarDistance: 15,\n          horizontalBars: false,\n          axisY: {\n            offset: 20\n          },\n        },\n        responsiveOptions : [\n            ['screen and (min-width: 1200px) and (max-width: 1366px)', {\n                seriesBarDistance: 10\n           }],\n            ['screen and (max-width: 767px)', {\n                seriesBarDistance: 10\n           }],\n            ['screen and (max-width: 360px)', {\n                seriesBarDistance: 6\n           }]\n        ]\n      },\n      chart10 : {\n        data: {\n          labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n          series: [\n            [12, 9, 7, 8, 5],\n            [2, 1, 3.5, 7, 3],\n            [1, 3, 4, 5, 6]\n          ]\n        },\n        options: {\n          fullWidth: true,\n          chartPadding: {\n            right: 40\n          }\n        },\n      },\n      chart11 : {\n        data: {\n          labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n          series: [\n            [5, 5, 10, 8, 7, 5, 4, null, null, null, 10, 10, 7, 8, 6, 9],\n            [10, 15, null, 12, null, 10, 12, 15, null, null, 12, null, 14, null, null, null],\n            [null, null, null, null, 3, 4, 1, 3, 4,  6,  7,  9, 5, null, null, null],\n            [{x:3, y: 3},{x: 4, y: 3}, {x: 5, y: undefined}, {x: 6, y: 4}, {x: 7, y: null}, {x: 8, y: 4}, {x: 9, y: 4}]\n          ]\n        },\n        options: {\n          fullWidth: true,\n          chartPadding: {\n            right: 10\n          },\n          low: 0\n        },\n      },\n      chart12 : {\n        data: {\n          labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n          series: [\n            [5, 5, 10, 8, 7, 5, 4, null, null, null, 10, 10, 7, 8, 6, 9],\n            [10, 15, null, 12, null, 10, 12, 15, null, null, 12, null, 14, null, null, null],\n            [null, null, null, null, 3, 4, 1, 3, 4,  6,  7,  9, 5, null, null, null],\n            [{x:3, y: 3},{x: 4, y: 3}, {x: 5, y: undefined}, {x: 6, y: 4}, {x: 7, y: null}, {x: 8, y: 4}, {x: 9, y: 4}]\n          ]\n        },\n        options: {\n          fullWidth: true,\n          chartPadding: {\n            right: 10\n          },\n          lineSmooth: Chartist.Interpolation.cardinal({\n              fillHoles: true\n          }),\n          low: 0\n        }\n      }\n    }\n  }\n}\n</script>"]}]}