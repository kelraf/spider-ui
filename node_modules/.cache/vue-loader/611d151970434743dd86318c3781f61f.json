{"remainingRequest":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/kelraf/code_it/vue/spider-ui/theme/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kelraf/code_it/vue/spider-ui/theme/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kelraf/code_it/vue/spider-ui/theme/src/pages/todo/firebase_todo.vue?vue&type=template&id=05da3f0e&","dependencies":[{"path":"/home/kelraf/code_it/vue/spider-ui/theme/src/pages/todo/firebase_todo.vue","mtime":1572858637000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"Breadcrumbs\", { attrs: { main: \"\", title: \"firebase todo\" } }),\n      _c(\"div\", { staticClass: \"container-fluid\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-xl-12\" }, [\n            _c(\"div\", { staticClass: \"card\" }, [\n              _vm._m(0),\n              _c(\"div\", { staticClass: \"card-body custom-scrollbar\" }, [\n                _c(\"div\", { staticClass: \"todo\" }, [\n                  _c(\"div\", { staticClass: \"todo-list-wrapper\" }, [\n                    _c(\"div\", { staticClass: \"todo-list-container\" }, [\n                      _c(\"div\", { staticClass: \"mark-all-tasks firebase-sm\" }, [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"mark-all-tasks-container\",\n                            on: {\n                              click: function($event) {\n                                return _vm.alltaskcomplete()\n                              }\n                            }\n                          },\n                          [\n                            _c(\n                              \"span\",\n                              {\n                                staticClass: \"mark-all-btn\",\n                                class: { \"move-down\": !_vm.markallread },\n                                attrs: {\n                                  id: \"mark-all-finished\",\n                                  role: \"button\"\n                                }\n                              },\n                              [\n                                _c(\"span\", { staticClass: \"btn-label\" }, [\n                                  _vm._v(\"Mark all as finished\")\n                                ]),\n                                _vm._m(1)\n                              ]\n                            ),\n                            _c(\n                              \"span\",\n                              {\n                                staticClass: \"mark-all-btn \",\n                                class: { \"move-down\": _vm.markallread },\n                                attrs: {\n                                  id: \"mark-all-incomplete\",\n                                  role: \"button\"\n                                }\n                              },\n                              [\n                                _c(\"span\", { staticClass: \"btn-label\" }, [\n                                  _vm._v(\"Mark all as Incomplete\")\n                                ]),\n                                _vm._m(2)\n                              ]\n                            )\n                          ]\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"todo-list-body\" }, [\n                        _c(\n                          \"ul\",\n                          { attrs: { id: \"todo-list\" } },\n                          _vm._l(_vm.todolist, function(todo, index) {\n                            return _c(\n                              \"li\",\n                              {\n                                key: index,\n                                staticClass: \"task\",\n                                class: { completed: todo.status == \"complete\" }\n                              },\n                              [\n                                _c(\"div\", { staticClass: \"task-container\" }, [\n                                  _c(\"h4\", { staticClass: \"task-label\" }, [\n                                    _vm._v(\" \" + _vm._s(todo.title) + \" \")\n                                  ]),\n                                  _c(\n                                    \"span\",\n                                    { staticClass: \"task-action-btn\" },\n                                    [\n                                      _c(\n                                        \"span\",\n                                        {\n                                          staticClass:\n                                            \"action-box large delete-btn\",\n                                          attrs: { title: \"Delete Task\" },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.tododelete(todo.id)\n                                            }\n                                          }\n                                        },\n                                        [_vm._m(3, true)]\n                                      ),\n                                      _c(\n                                        \"span\",\n                                        {\n                                          staticClass:\n                                            \"action-box large complete-btn\",\n                                          attrs: { title: \"Mark Complete\" },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.taskcomplete(\n                                                todo.id,\n                                                todo.status\n                                              )\n                                            }\n                                          }\n                                        },\n                                        [_vm._m(4, true)]\n                                      )\n                                    ]\n                                  )\n                                ])\n                              ]\n                            )\n                          }),\n                          0\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"todo-list-footer\" }, [\n                        _c(\"div\", { staticClass: \"add-task-btn-wrapper\" }, [\n                          _c(\"span\", { staticClass: \"add-task-btn\" }, [\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"btn btn-primary\",\n                                class: { \"d-none\": _vm.addtask },\n                                on: {\n                                  click: function($event) {\n                                    _vm.addtask = !_vm.addtask\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"icon-plus\" }),\n                                _vm._v(\" Add new task\")\n                              ]\n                            )\n                          ])\n                        ]),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"new-task-wrapper \",\n                            class: { visible: _vm.addtask }\n                          },\n                          [\n                            _c(\"textarea\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.task,\n                                  expression: \"task\"\n                                }\n                              ],\n                              attrs: {\n                                id: \"new-task\",\n                                placeholder: \"Enter new task here. . .\"\n                              },\n                              domProps: { value: _vm.task },\n                              on: {\n                                keyup: function($event) {\n                                  if (\n                                    !$event.type.indexOf(\"key\") &&\n                                    _vm._k(\n                                      $event.keyCode,\n                                      \"enter\",\n                                      13,\n                                      $event.key,\n                                      \"Enter\"\n                                    )\n                                  ) {\n                                    return null\n                                  }\n                                  return _vm.addnewtask($event)\n                                },\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.task = $event.target.value\n                                }\n                              }\n                            }),\n                            _c(\n                              \"span\",\n                              {\n                                staticClass: \"btn btn-danger cancel-btn\",\n                                attrs: { id: \"close-task-panel\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.addtask = false\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Close\")]\n                            ),\n                            _c(\n                              \"span\",\n                              {\n                                staticClass:\n                                  \"btn btn-success ml-3 add-new-task-btn\",\n                                attrs: { id: \"add-task\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.addnewtask()\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Add Task\")]\n                            )\n                          ]\n                        )\n                      ])\n                    ])\n                  ]),\n                  _c(\n                    \"div\",\n                    [\n                      _c(\"notifications\", {\n                        attrs: { classes: \"task\", group: \"Todolist\" }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _c(\n                  \"script\",\n                  { attrs: { id: \"task-template \", type: \"tect/template\" } },\n                  [\n                    _vm._v(\n                      '\\n                  <li class=\"task\">\\n                  <div class=\"task-container\">\\n                  <h4 class=\"task-label\"></h4>\\n                  <span class=\"task-action-btn\">\\n                  <span class=\"action-box large delete-btn\" title=\"Delete Task\">\\n                  <i class=\"icon\"><i class=\"icon-trash\"></i></i>\\n                  </span>\\n                  <span class=\"action-box large complete-btn\" title=\"Mark Complete\">\\n                  <i class=\"icon\"><i class=\"icon-check\"></i></i>\\n                  </span>\\n                  </span>\\n                  </div>\\n                  </li>\\n                '\n                    )\n                  ]\n                )\n              ])\n            ])\n          ])\n        ])\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header firebase-header\" }, [\n      _c(\"h5\", [_vm._v(\"firebase todo\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", { staticClass: \"action-box completed\" }, [\n      _c(\"i\", { staticClass: \"icon\" }, [_c(\"i\", { staticClass: \"icon-check\" })])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", { staticClass: \"action-box\" }, [\n      _c(\"i\", { staticClass: \"icon\" }, [_c(\"i\", { staticClass: \"icon-check\" })])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"i\", { staticClass: \"icon\" }, [\n      _c(\"i\", { staticClass: \"icon-trash\" })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"i\", { staticClass: \"icon\" }, [\n      _c(\"i\", { staticClass: \"icon-check\" })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}