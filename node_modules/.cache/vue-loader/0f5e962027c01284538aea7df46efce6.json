{"remainingRequest":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kelraf/code_it/vue/spider-ui/theme/src/pages/ecommerce/filterbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kelraf/code_it/vue/spider-ui/theme/src/pages/ecommerce/filterbar.vue","mtime":1574073129000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueSlider from 'vue-slider-component'\nimport { mapGetters, mapState } from 'vuex'\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\nimport 'swiper/dist/css/swiper.css'\n\nexport default {\n    data() {\n    return {\n      filter: false,\n      value: [0, 450],\n      applyFilter: [],\n      swiperOption: {\n      loop: true,\n      navigation: {\n        nextEl: '.swiper-button-next',\n        prevEl: '.swiper-button-prev'\n      }\n      }\n    }\n  },\n    components: {\n        VueSlider,\n        swiper,\n        swiperSlide\n    },\n    computed: {\n    ...mapState({\n       products: state => state.products.products\n    }),\n    ...mapGetters({\n      getCategory: 'products/getCategory',\n      getBrand: 'products/getBrands',\n      getColors: 'products/getColors'\n    })\n    },\n    mounted() {\n     this.$emit('priceVal', this.value)\n    },\n    methods: {\n        isActive(filterItem) {\n        return this.applyFilter.indexOf(filterItem) > -1\n        },\n        appliedFilter() {\n        this.$emit('allFilters', this.applyFilter)\n        },\n        sliderChange(event) {\n        this.$emit('priceVal', event)\n        },\n        getImgUrl(path) {\n        return require('../../assets/images/'+path)\n        }, \n    }\n}\n",{"version":3,"sources":["filterbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"filterbar.vue","sourceRoot":"src/pages/ecommerce","sourcesContent":["<template>\n  <div class=\"left-filter\">\n    <div class=\"card-body filter-cards-view animate-chk\">\n      <div class=\"product-filter\">\n        <h6 class=\"f-w-600\">Category</h6>\n        <div class=\"checkbox-animated mt-0\">\n          <label class=\"d-block\" v-for=\"(product,index) in getCategory\" :key=\"index\">\n            <input  @change=\"appliedFilter(product.category)\" :value=\"product.category\" v-model=\"applyFilter\" \n            class=\"checkbox_animated\" :id=\"product.category\" type=\"checkbox\">{{product.category | capitalize}}\n          </label>\n        </div>\n      </div>\n      <div class=\"product-filter\">\n        <h6 class=\"f-w-600\">Brand</h6>\n        <div class=\"checkbox-animated mt-0\">\n          <label class=\"d-block\" v-for=\"(brand,index) in getBrand\" :key=\"index\">\n            <input @change=\"appliedFilter(brand)\" class=\"checkbox_animated\" :value=\"brand\" \n            v-model=\"applyFilter\" :id=\"brand\" type=\"checkbox\"> {{brand | capitalize}}\n          </label>\n        </div>\n      </div>\n      <div class=\"product-filter slider-product\">\n        <h6 class=\"f-w-600\">Colors</h6>\n        <div class=\"checkbox-animated mt-0\">\n          <label class=\"d-block\" v-for=\"(product,index) in getColors\" :key=\"index\">\n            <input @change=\"appliedFilter(product.color)\" class=\"checkbox_animated\" :value=\"product.color\" \n            v-model=\"applyFilter\" :id=\"product.color\" type=\"checkbox\"> \n            <span :class=\"product.color\" v-bind:style=\"{ 'background-color' : product.color}\"></span>\n            {{product.color | capitalize}}                                  \n          </label>\n        </div>\n      </div>\n      <div class=\"product-filter pb-0\">\n        <h6 class=\"f-w-600\">Price</h6>\n          <vue-slider\n          v-model=\"value\"\n          :min=\"0\"\n          :max=\"800\"\n          ref=\"slider\"\n          @change=\"sliderChange($refs.slider.getValue())\">\n          </vue-slider>\n      </div>\n      <div class=\"product-filter new-products\">\n        <h6 class=\"f-w-600\">New Products</h6>\n           <swiper :options=\"swiperOption\">\n                <swiper-slide >\n                  <div class=\"product-box row\" v-for=\"(product,index) in products.slice(0, 3)\" :key=\"index\">\n                  <div class=\"product-img col-md-6\">\n                    <img class=\"img-fluid\" :src='getImgUrl(product.images[0])' alt=\"\">\n                  </div>\n                  <div class=\"product-details col-md-6 text-left\">\n                    <span>\n                      <i class=\"fa fa-star font-warning mr-1\"></i>\n                      <i class=\"fa fa-star font-warning mr-1\"></i>\n                      <i class=\"fa fa-star font-warning mr-1\"></i>\n                      <i class=\"fa fa-star font-warning mr-1\"></i>\n                      <i class=\"fa fa-star font-warning\"></i>\n                    </span>\n                    <router-link :to=\"'/ecommerce/details/'+product.sku\"> <p class=\"mb-0\">{{product.name}}</p></router-link>\n                    <div class=\"product-price\">{{product.price | currency}}</div>\n                  </div>\n                  </div>\n                  </swiper-slide>\n                  <swiper-slide v-if=\"products.length >= 4\">\n                    <div class=\"product-box row\" v-for=\"(product,index) in products.slice(3, 6)\" :key=\"index\">\n                      <div class=\"product-img col-md-6\">\n                        <img class=\"img-fluid\" :src='getImgUrl(product.images[0])' alt=\"\">\n                      </div>\n                    <div class=\"product-details col-md-6 text-left\">\n                      <span>\n                        <i class=\"fa fa-star font-warning mr-1\"></i>\n                        <i class=\"fa fa-star font-warning mr-1\"></i>\n                        <i class=\"fa fa-star font-warning mr-1\"></i>\n                        <i class=\"fa fa-star font-warning mr-1\"></i>\n                        <i class=\"fa fa-star font-warning\"></i>\n                      </span>\n                      <router-link :to=\"'/ecommerce/details/'+product.sku\"> <p class=\"mb-0\">{{product.name}}</p></router-link>\n                      <div class=\"product-price\">{{product.price | currency}}</div>\n                    </div>\n                    </div>\n                  </swiper-slide>\n                   <div class=\"swiper-button-prev\" slot=\"button-prev\">\n                      <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\n                   </div>\n                   <div class=\"swiper-button-next\" slot=\"button-next\">\n                     <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n                   </div>\n           </swiper>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport VueSlider from 'vue-slider-component'\nimport { mapGetters, mapState } from 'vuex'\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\nimport 'swiper/dist/css/swiper.css'\n\nexport default {\n    data() {\n    return {\n      filter: false,\n      value: [0, 450],\n      applyFilter: [],\n      swiperOption: {\n      loop: true,\n      navigation: {\n        nextEl: '.swiper-button-next',\n        prevEl: '.swiper-button-prev'\n      }\n      }\n    }\n  },\n    components: {\n        VueSlider,\n        swiper,\n        swiperSlide\n    },\n    computed: {\n    ...mapState({\n       products: state => state.products.products\n    }),\n    ...mapGetters({\n      getCategory: 'products/getCategory',\n      getBrand: 'products/getBrands',\n      getColors: 'products/getColors'\n    })\n    },\n    mounted() {\n     this.$emit('priceVal', this.value)\n    },\n    methods: {\n        isActive(filterItem) {\n        return this.applyFilter.indexOf(filterItem) > -1\n        },\n        appliedFilter() {\n        this.$emit('allFilters', this.applyFilter)\n        },\n        sliderChange(event) {\n        this.$emit('priceVal', event)\n        },\n        getImgUrl(path) {\n        return require('../../assets/images/'+path)\n        }, \n    }\n}\n</script>"]}]}