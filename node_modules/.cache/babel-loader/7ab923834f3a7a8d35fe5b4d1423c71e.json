{"remainingRequest":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/babel-loader/lib/index.js!/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/eslint-loader/index.js??ref--13-0!/home/kelraf/code_it/vue/spider-ui/spider-ui/src/store/modules/todo.js","dependencies":[{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/src/store/modules/todo.js","mtime":1572858637000},{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport ToDo from \"../../data/todo\";\nvar state = {\n  todo: ToDo.data\n}; // getters\n\nvar getters = {}; // mutations\n\nvar mutations = {\n  taskcomplete: function taskcomplete(state, payload) {\n    state.todo.find(function (list) {\n      if (list.id == payload) {\n        return list.status = list.status == \"complete\" ? \"incomplete\" : \"complete\";\n      }\n    });\n  },\n  alltaskcomplete: function alltaskcomplete(state, payload) {\n    state.todo.filter(function (list) {\n      return list.status = payload == true ? \"complete\" : \"incomplete\";\n    });\n  },\n  tododelete: function tododelete(state, payload) {\n    state.todo = state.todo.filter(function (list) {\n      return list.id != payload;\n    });\n  },\n  addtodo: function addtodo(state, payload) {\n    var id = state.todo.slice(-1)[0].id + 1;\n    state.todo.push({\n      \"id\": id,\n      \"title\": payload,\n      \"delete\": false,\n      \"status\": \"incomplete\"\n    });\n  }\n}; // actions\n\nvar actions = {\n  taskcomplete: function taskcomplete(context, payload) {\n    context.commit('taskcomplete', payload);\n  },\n  alltaskcomplete: function alltaskcomplete(context, payload) {\n    context.commit('alltaskcomplete', payload);\n  },\n  tododelete: function tododelete(context, payload) {\n    context.commit('tododelete', payload);\n  },\n  addtodo: function addtodo(context, payload) {\n    context.commit('addtodo', payload);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/kelraf/code_it/vue/spider-ui/spider-ui/src/store/modules/todo.js"],"names":["ToDo","state","todo","data","getters","mutations","taskcomplete","payload","find","list","id","status","alltaskcomplete","filter","tododelete","addtodo","slice","push","actions","context","commit","namespaced"],"mappings":";AAAA,OAAOA,IAAP;AAGA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAGF,IAAI,CAACG;AADF,CAAd,C,CAIA;;AACA,IAAMC,OAAO,GAAG,EAAhB,C,CAIA;;AACA,IAAMC,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAC,sBAACL,KAAD,EAAOM,OAAP,EAAiB;AAC1BN,IAAAA,KAAK,CAACC,IAAN,CAAWM,IAAX,CAAgB,UAAUC,IAAV,EAAgB;AAC5B,UAAIA,IAAI,CAACC,EAAL,IAAWH,OAAf,EAAwB;AACpB,eAAOE,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACE,MAAL,IAAe,UAAf,GAA4B,YAA5B,GAA2C,UAAhE;AACH;AACJ,KAJD;AAKH,GAPa;AAQdC,EAAAA,eAAe,EAAC,yBAACX,KAAD,EAAOM,OAAP,EAAiB;AAC9BN,IAAAA,KAAK,CAACC,IAAN,CAAWW,MAAX,CAAkB,UAAUJ,IAAV,EAAgB;AAC1B,aAAOA,IAAI,CAACE,MAAL,GAAcJ,OAAO,IAAI,IAAX,GAAkB,UAAlB,GAA6B,YAAlD;AACN,KAFF;AAGF,GAZa;AAadO,EAAAA,UAAU,EAAC,oBAACb,KAAD,EAAOM,OAAP,EAAiB;AACxBN,IAAAA,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAN,CAAWW,MAAX,CAAkB,UAAAJ,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,IAAWH,OAAf;AAAA,KAAtB,CAAb;AACH,GAfa;AAgBdQ,EAAAA,OAAO,EAAC,iBAACd,KAAD,EAAOM,OAAP,EAAiB;AACrB,QAAIG,EAAE,GAAGT,KAAK,CAACC,IAAN,CAAWc,KAAX,CAAiB,CAAC,CAAlB,EAAqB,CAArB,EAAwBN,EAAxB,GAA2B,CAApC;AACCT,IAAAA,KAAK,CAACC,IAAN,CAAWe,IAAX,CACG;AACI,YAAMP,EADV;AAEI,eAASH,OAFb;AAGI,gBAAU,KAHd;AAII,gBAAU;AAJd,KADH;AAQJ;AA1Ba,CAAlB,C,CA8BA;;AACA,IAAMW,OAAO,GAAG;AACZZ,EAAAA,YAAY,EAAC,sBAACa,OAAD,EAAUZ,OAAV,EAAsB;AAC/BY,IAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA8Bb,OAA9B;AACH,GAHW;AAIZK,EAAAA,eAAe,EAAC,yBAACO,OAAD,EAASZ,OAAT,EAAqB;AACjCY,IAAAA,OAAO,CAACC,MAAR,CAAe,iBAAf,EAAiCb,OAAjC;AACH,GANW;AAOZO,EAAAA,UAAU,EAAC,oBAACK,OAAD,EAAUZ,OAAV,EAAsB;AAC7BY,IAAAA,OAAO,CAACC,MAAR,CAAe,YAAf,EAA4Bb,OAA5B;AACH,GATW;AAUZQ,EAAAA,OAAO,EAAC,iBAACI,OAAD,EAAUZ,OAAV,EAAsB;AAC1BY,IAAAA,OAAO,CAACC,MAAR,CAAe,SAAf,EAAyBb,OAAzB;AACH;AAZW,CAAhB;AAeA,eAAe;AACXc,EAAAA,UAAU,EAAE,IADD;AAEXpB,EAAAA,KAAK,EAALA,KAFW;AAGXG,EAAAA,OAAO,EAAPA,OAHW;AAIXc,EAAAA,OAAO,EAAPA,OAJW;AAKXb,EAAAA,SAAS,EAATA;AALW,CAAf","sourcesContent":["import ToDo from '../../data/todo'\n\n\nconst state = {\n    todo : ToDo.data\n}\n\n// getters\nconst getters = {\n\n}\n\n// mutations\nconst mutations = {\n    taskcomplete:(state,payload)=>{\n        state.todo.find(function (list) {\n            if (list.id == payload) {\n                return list.status = list.status == \"complete\" ? \"incomplete\" : \"complete\"\n            }\n        })\n    },\n    alltaskcomplete:(state,payload)=>{\n       state.todo.filter(function (list) {\n               return list.status = payload == true ? \"complete\":\"incomplete\"\n        })\n    },\n    tododelete:(state,payload)=>{\n        state.todo = state.todo.filter(list => list.id != payload)\n    },\n    addtodo:(state,payload)=>{\n        let id = state.todo.slice(-1)[0].id+1;\n         state.todo.push(\n            {\n                \"id\": id,\n                \"title\": payload,\n                \"delete\": false,\n                \"status\": \"incomplete\"\n            }\n        )\n    }\n\n};\n\n// actions\nconst actions = {\n    taskcomplete:(context, payload) => {\n        context.commit('taskcomplete',payload)\n    },\n    alltaskcomplete:(context,payload) => {\n        context.commit('alltaskcomplete',payload)\n    },\n    tododelete:(context, payload) => {\n        context.commit('tododelete',payload)\n    },\n    addtodo:(context, payload) => {\n        context.commit('addtodo',payload)\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}