{"remainingRequest":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/babel-loader/lib/index.js!/home/kelraf/code_it/vue/spider-ui/theme/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kelraf/code_it/vue/spider-ui/theme/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kelraf/code_it/vue/spider-ui/theme/src/pages/ecommerce/checkout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kelraf/code_it/vue/spider-ui/theme/src/pages/ecommerce/checkout.vue","mtime":1577436165000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/home/kelraf/code_it/vue/spider-ui/theme/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport PayPal from 'vue-paypal-checkout';\nexport default {\n  name: \"Checkout\",\n  data: function data() {\n    return {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        pincode: \"\"\n      },\n      submitted: false,\n      payment: false,\n      complete: false,\n      paypal: {\n        sandbox: 'YOUR SANDBOX ID'\n      },\n      environment: \"sandbox\",\n      button_style: {\n        label: 'checkout',\n        size: 'large',\n        // small | medium | large | responsive\n        shape: 'pill',\n        // pill | rect\n        color: 'blue' // gold | blue | silver | black\n\n      },\n      amtchar: ''\n    };\n  },\n  components: {\n    PayPal: PayPal\n  },\n  computed: _objectSpread({}, mapState({\n    cart: function cart(state) {\n      return state.products.cart;\n    },\n    getAmount: function getAmount() {\n      return this.totalAmount = this.$store.getters[\"products/getTotalAmount\"];\n    }\n  })),\n  methods: {\n    payWithStripe: function payWithStripe() {\n      var _this = this;\n\n      var handler = window.StripeCheckout.configure({\n        key: 'PUBLISHBLE_KEY',\n        // 'PUBLISHBLE_KEY' publishble key\n        locale: 'auto',\n        token: function token(_token) {\n          _this.$store.dispatch(\"products/createOrder\", {\n            product: _this.cart,\n            userDetail: _this.user,\n            token: _token.id,\n            amt: _this.totalAmount\n          });\n\n          _this.$router.push('/ecommerce/success');\n        }\n      });\n      handler.open({\n        name: 'Endless ',\n        description: 'Your Choice Theme',\n        amount: this.totalAmount * 100\n      });\n    },\n    getamt: function getamt() {\n      return this.totalAmount.toString();\n    },\n    removeProduct: function removeProduct(product) {\n      this.$store.dispatch(\"products/removeProduct\", product);\n    },\n    onPaymentComplete: function onPaymentComplete(data) {\n      console.log('data', data);\n      this.$store.dispatch(\"products/createOrder\", {\n        product: this.cart,\n        userDetail: this.user,\n        token: data.orderID,\n        amt: this.totalAmount\n      });\n    },\n    onCancelled: function onCancelled() {\n      console.log(\"You cancelled a window\");\n    }\n  }\n};",{"version":3,"sources":["checkout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoNA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,qBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,SAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA,EALA;AAMA,QAAA,IAAA,EAAA,EANA;AAOA,QAAA,KAAA,EAAA,EAPA;AAQA,QAAA,OAAA,EAAA;AARA,OADA;AAWA,MAAA,SAAA,EAAA,KAXA;AAYA,MAAA,OAAA,EAAA,KAZA;AAaA,MAAA,QAAA,EAAA,KAbA;AAcA,MAAA,MAAA,EAAA;AACA,QAAA,OAAA,EAAA;AADA,OAdA;AAiBA,MAAA,WAAA,EAAA,SAjBA;AAkBA,MAAA,YAAA,EAAA;AACA,QAAA,KAAA,EAAA,UADA;AAEA,QAAA,IAAA,EAAA,OAFA;AAEA;AACA,QAAA,KAAA,EAAA,MAHA;AAGA;AACA,QAAA,KAAA,EAAA,MAJA,CAIA;;AAJA,OAlBA;AAwBA,MAAA,OAAA,EAAA;AAxBA,KAAA;AA0BA,GA7BA;AA8BA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GA9BA;AAiCA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,IAAA,EAAA,cAAA,KAAA;AAAA,aAAA,KAAA,CAAA,QAAA,CAAA,IAAA;AAAA,KADA;AAEA,IAAA,SAFA,uBAEA;AACA,aAAA,KAAA,WAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CACA,yBADA,CAAA;AAGA;AANA,GAAA,CADA,CAjCA;AA2CA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,UAAA,OAAA,GAAA,MAAA,CAAA,cAAA,CAAA,SAAA,CAAA;AACA,QAAA,GAAA,EAAA,gBADA;AACA;AACA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,KAAA,EAAA,eAAA,MAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA;AACA,YAAA,OAAA,EAAA,KAAA,CAAA,IADA;AAEA,YAAA,UAAA,EAAA,KAAA,CAAA,IAFA;AAGA,YAAA,KAAA,EAAA,MAAA,CAAA,EAHA;AAIA,YAAA,GAAA,EAAA,KAAA,CAAA;AAJA,WAAA;;AAMA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,oBAAA;AACA;AAXA,OAAA,CAAA;AAaA,MAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,WAAA,EAAA,mBAFA;AAGA,QAAA,MAAA,EAAA,KAAA,WAAA,GAAA;AAHA,OAAA;AAKA,KApBA;AAqBA,IAAA,MArBA,oBAqBA;AACA,aAAA,KAAA,WAAA,CAAA,QAAA,EAAA;AACA,KAvBA;AAwBA,IAAA,aAAA,EAAA,uBAAA,OAAA,EAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,wBAAA,EAAA,OAAA;AACA,KA1BA;AA2BA,IAAA,iBAAA,EAAA,2BAAA,IAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,IAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA;AACA,QAAA,OAAA,EAAA,KAAA,IADA;AAEA,QAAA,UAAA,EAAA,KAAA,IAFA;AAGA,QAAA,KAAA,EAAA,IAAA,CAAA,OAHA;AAIA,QAAA,GAAA,EAAA,KAAA;AAJA,OAAA;AAMA,KAnCA;AAoCA,IAAA,WApCA,yBAoCA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,wBAAA;AACA;AAtCA;AA3CA,CAAA","sourcesContent":["<template>\n  <div class=\"checkout\">\n    <Breadcrumbs main=\"Ecommerce\" title=\"Checkout\" />\n    <!-- Container-fluid starts-->\n    <div class=\"container-fluid\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Billing Details</h5>\n        </div>\n        <div class=\"card-body\">\n          <form>\n          <div class=\"row\">\n            <div class=\"col-lg-6 col-sm-12\">\n              <div class=\"form-row\">\n                <div class=\"form-group col-sm-6\">\n                  <label for=\"inputEmail4\">First Name</label>\n                  <input\n                    type=\"text\"\n                    v-model=\"user.firstName\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    class=\"form-control\"\n                    :class=\"{ 'is-invalid': submitted && errors.has('firstName') }\"\n                  />\n                  <div\n                    v-if=\"submitted && errors.has('firstName')\"\n                    class=\"invalid-feedback\"\n                  >{{ errors.first('firstName') }}</div>\n                </div>\n                <div class=\"form-group col-sm-6\">\n                  <label for=\"inputPassword4\">Last Name</label>\n                  <input\n                    type=\"text\"\n                    v-model=\"user.lastName\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    class=\"form-control\"\n                    :class=\"{ 'is-invalid': submitted && errors.has('lastName') }\"\n                  />\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-sm-6\">\n                  <label for=\"inputEmail4\">Phone</label>\n                  <input\n                    type=\"text\"\n                    v-model=\"user.phone\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    class=\"form-control\"\n                    :class=\"{ 'is-invalid': submitted && errors.has('phone') }\"\n                  />\n                </div>\n                <div class=\"form-group col-sm-6\">\n                  <label for=\"inputPassword4\">Email Address</label>\n                  <input\n                    type=\"email\"\n                    v-model=\"user.email\"\n                    id=\"email\"\n                    name=\"email\"\n                    class=\"form-control\"\n                    :class=\"{ 'is-invalid': submitted && errors.has('email') }\"\n                  />\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputState\">Country</label>\n                <select class=\"form-control\" id=\"inputState\">\n                  <option>Choose...</option>\n                  <option selected>India</option>\n                  <option>USA</option>\n                  <option>UK</option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputAddress2\">Address</label>\n                <input\n                  type=\"text\"\n                  v-model=\"user.address\"\n                  id=\"address\"\n                  name=\"address\"\n                  class=\"form-control\"\n                  :class=\"{ 'is-invalid': submitted && errors.has('address') }\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputCity\">Town/City</label>\n                <input\n                  type=\"text\"\n                  v-model=\"user.city\"\n                  id=\"city\"\n                  name=\"city\"\n                  class=\"form-control\"\n                  :class=\"{ 'is-invalid': submitted && errors.has('city') }\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputAddress2\">State/Country</label>\n                <input\n                  type=\"text\"\n                  v-model=\"user.state\"\n                  id=\"state\"\n                  name=\"state\"\n                  class=\"form-control\"\n                  :class=\"{ 'is-invalid': submitted && errors.has('state') }\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputAddress2\">Postal Code</label>\n                <input\n                  type=\"text\"\n                  v-model=\"user.pincode\"\n                  id=\"pincode\"\n                  name=\"pincode\"\n                  class=\"form-control\"\n                  :class=\"{ 'is-invalid': submitted && errors.has('pincode') }\"\n                />\n              </div>\n            </div>\n            <div class=\"col-lg-6 col-sm-12\">\n              <div class=\"checkout-details\">\n                <div class=\"order-box\">\n                  <div class=\"title-box\">\n                    <div class=\"checkbox-title\">\n                      <h4>Product</h4>\n                      <span>Total</span>\n                    </div>\n                  </div>\n                  <ul class=\"qty\" v-if=\"cart.length\">\n                    <li v-for=\"(item,index) in cart\" :key=\"index\">\n                      {{item.name}} × {{item.quantity}}\n                      <span>{{item.price * item.quantity | currency}}</span>\n                    </li>\n                  </ul>\n                  <ul class=\"qty\" v-if=\"!cart.length\">\n                    <li v-if=\"!cart.length\">There are no products in cart</li>\n                  </ul>\n                  <ul class=\"sub-total\">\n                    <li>\n                      Subtotal\n                      <span class=\"count\">{{getAmount | currency}}</span>\n                    </li>\n                  </ul>\n                  <ul class=\"sub-total\">\n                    <li>\n                      Total\n                      <span class=\"count\">{{getAmount | currency}}</span>\n                    </li>\n                  </ul>\n                  <div class=\"animate-chk\" v-if=\"cart.length\">\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <label class=\"d-block\" for=\"edo-ani\">\n                          <input\n                            class=\"radio_animated\"\n                            id=\"edo-ani\"\n                            v-model=\"payment\"\n                            :value=\"false\"\n                            type=\"radio\"\n                            name=\"rdo-ani\"\n                            checked\n                            data-original-title\n                            title\n                          />Stripe\n                        </label>\n                        <label class=\"d-block\" for=\"edo-ani1\">\n                          <input\n                            class=\"radio_animated\"\n                            id=\"edo-ani1\"\n                            v-model=\"payment\"\n                            type=\"radio\"\n                            :value=\"true\"\n                            name=\"rdo-ani\"\n                            data-original-title\n                            title\n                          />PayPal\n                        </label>\n                        <label class=\"d-block\" for=\"edo-ani2\">\n                          <img class=\"img-paypal\" src=\"../../assets/images/checkout/paypal.png\" alt />\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <PayPal\n                      :amount=getamt()\n                      currency=\"USD\"\n                      :client=\"paypal\"\n                      :env=\"environment\"\n                      :style=\"button_style\"\n                      v-if=\"payment\"\n                      v-on:payment-authorized=\"onPaymentComplete\"\n                      v-on:payment-cancelled=\"onCancelled()\">\n                  </PayPal>\n                  <div class=\"text-right m-t-10\" v-if=\"cart.length && !payment\">\n                      <button\n                      class=\"btn btn-primary\"\n                      @click=\"payWithStripe\"\n                      type=\"button\"\n                    >Place Order</button>\n                  </div>                   \n                </div>\n              </div>\n            </div>\n          </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    <!-- Container-fluid Ends-->\n  </div>\n</template>\n<script>\nimport { mapState } from \"vuex\";\nimport PayPal from 'vue-paypal-checkout'\n\nexport default {\n  name: \"Checkout\",\n  data() {\n    return {\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        phone: \"\",\n        email: \"\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        pincode: \"\"\n      },\n      submitted: false,\n      payment: false,\n      complete: false,\n      paypal: {\n        sandbox: 'YOUR SANDBOX ID'\n      },\n      environment : \"sandbox\",\n      button_style : {\n        label: 'checkout',\n        size:  'large',    // small | medium | large | responsive\n        shape: 'pill',         // pill | rect\n        color: 'blue'         // gold | blue | silver | black\n      },\n      amtchar:''\n    };\n  },\n  components: {\n    PayPal\n  },\n  computed: {\n    ...mapState({\n      cart: state => state.products.cart,\n      getAmount() {\n        return (this.totalAmount = this.$store.getters[\n          \"products/getTotalAmount\"\n        ]);\n      }\n    })\n  },\n  methods: {\n    payWithStripe() {\n      var handler = (window).StripeCheckout.configure({\n      key: 'PUBLISHBLE_KEY', // 'PUBLISHBLE_KEY' publishble key\n      locale: 'auto',\n      token: (token) => {\n         this.$store.dispatch(\"products/createOrder\", {\n          product: this.cart,\n          userDetail: this.user,\n          token: token.id,\n          amt: this.totalAmount\n        });\n        this.$router.push('/ecommerce/success')\n      },\n    });\n    handler.open({\n      name: 'Endless ',\n      description: 'Your Choice Theme',\n      amount: this.totalAmount * 100\n    })\n  },\n    getamt(){\n      return this.totalAmount.toString()\n    },\n    removeProduct: function(product) {\n      this.$store.dispatch(\"products/removeProduct\", product);\n    },\n    onPaymentComplete: function (data) {\n      console.log('data', data)\n       this.$store.dispatch(\"products/createOrder\", {\n          product: this.cart,\n          userDetail: this.user,\n          token: data.orderID,\n          amt: this.totalAmount\n        });\n    },\n    onCancelled(){\n      console.log(\"You cancelled a window\");\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/pages/ecommerce"}]}