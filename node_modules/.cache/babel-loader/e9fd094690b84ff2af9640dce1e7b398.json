{"remainingRequest":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/babel-loader/lib/index.js!/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/eslint-loader/index.js??ref--13-0!/home/kelraf/code_it/vue/spider-ui/spider-ui/src/store/modules/email.js","dependencies":[{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/src/store/modules/email.js","mtime":1572858637000},{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport Email from \"../../data/email\";\nvar state = {\n  all: Email.data,\n  emaillist: Email.data,\n  activeemail: 1\n}; // getters\n\nvar getters = {\n  activeemail: function activeemail(state) {\n    return state.all.find(function (email) {\n      if (email.id == state.activeemail) return email;\n    });\n  },\n  index: function index(state) {\n    return state.all.length;\n  },\n  send: function send(state) {\n    return state.all.filter(function (data) {\n      return data.type == 'sent' ? data : false;\n    }).length;\n  },\n  draft: function draft(state) {\n    return state.all.filter(function (data) {\n      return data.type == 'draft' ? data : false;\n    }).length;\n  },\n  trash: function trash(state) {\n    return state.all.filter(function (data) {\n      return data.type == 'trash' ? data : false;\n    }).length;\n  },\n  starred: function starred(state) {\n    return state.all.filter(function (data) {\n      if (data.favourite == true) return data;\n    }).length;\n  }\n}; // mutations\n\nvar mutations = {\n  setactiveemails: function setactiveemails(state, payload) {\n    state.activeemail = payload;\n  },\n  addfavorites: function addfavorites(state, payload) {\n    state.emaillist.find(function (list) {\n      if (list.id == payload) {\n        list.favourite = !list.favourite;\n      }\n    });\n  }\n}; // actions\n\nvar actions = {\n  setactiveemails: function setactiveemails(context, payload) {\n    context.commit('setactiveemails', payload);\n  },\n  addfavorites: function addfavorites(context, payload) {\n    context.commit('addfavorites', payload);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/kelraf/code_it/vue/spider-ui/spider-ui/src/store/modules/email.js"],"names":["Email","state","all","data","emaillist","activeemail","getters","find","email","id","index","length","send","filter","type","draft","trash","starred","favourite","mutations","setactiveemails","payload","addfavorites","list","actions","context","commit","namespaced"],"mappings":"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","sourcesContent":["import Email from '../../data/email'\n\n\nconst state = {\n    all:Email.data,\n    emaillist: Email.data,\n    activeemail: 1\n\n}\n\n// getters\nconst getters = {\n    activeemail: (state) => {\n        return state.all.find(email => {\n            if (email.id == state.activeemail)\n                return email;\n        })\n    },\n    index: (state) => {\n        return state.all.length\n    },\n    send: (state) => {\n        return state.all.filter(data=>{return data.type == 'sent'? data : false}).length\n    },\n    draft: (state) => {\n        return state.all.filter(data=>{return data.type == 'draft'? data : false}).length\n    },\n    trash: (state) => {\n        return state.all.filter(data=>{return data.type == 'trash'? data : false}).length\n    },\n    starred: (state) => {\n        return state.all.filter(data=>{ if(data.favourite == true) return data }).length\n    }\n}\n\n// mutations\nconst mutations = {\n    setactiveemails: (state, payload) => {\n        state.activeemail = payload\n    },\n    addfavorites: (state, payload) => {\n        state.emaillist.find(list =>{\n            if(list.id == payload){\n                list.favourite = ! list.favourite\n            }\n        })\n    }\n\n};\n\n// actions\nconst actions = {\n    setactiveemails: (context, payload) => {\n        context.commit('setactiveemails',payload)\n    },\n    addfavorites: (context, payload) => {\n        context.commit('addfavorites',payload)\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}