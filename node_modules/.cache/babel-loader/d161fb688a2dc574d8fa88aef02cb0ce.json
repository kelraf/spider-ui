{"remainingRequest":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/babel-loader/lib/index.js!/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/eslint-loader/index.js??ref--13-0!/home/kelraf/code_it/vue/spider-ui/spider-ui/src/store/modules/chat.js","dependencies":[{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/src/store/modules/chat.js","mtime":1572858637000},{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"/home/kelraf/code_it/vue/spider-ui/spider-ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport users from \"../../data/chat\";\nvar state = {\n  all: users.data,\n  users: users.data,\n  serchUser: users.data,\n  chats: users.chat,\n  activeuser: 1\n}; // getters\n\nvar getters = {\n  currentChat: function currentChat(state) {\n    var chats = state.chats.find(function (chat) {\n      if (chat.id == state.activeuser) return chat;\n    });\n    var users = state.users.find(function (user) {\n      if (user.id == state.activeuser) return user;\n    });\n    return _objectSpread({}, users, {\n      'chat': chats\n    });\n  }\n}; // mutations\n\nvar mutations = {\n  addChat: function addChat(state, payload) {\n    var today = new Date().toLocaleString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n    var id = state.activeuser;\n    var addchat = state.chats.find(function (chat) {\n      return chat.id == id;\n    });\n    addchat.messages.push({\n      \"sender\": 0,\n      \"time\": today.toLowerCase(),\n      \"text\": payload\n    });\n  },\n  addChatResponce: function addChatResponce(state) {\n    var today = new Date().toLocaleString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n    var id = state.activeuser;\n    var addchat = state.chats.find(function (chat) {\n      return chat.id == id;\n    });\n    addchat.messages.push({\n      \"sender\": id,\n      \"time\": today.toLowerCase(),\n      \"text\": '... I will text you later.'\n    });\n  },\n  setActiveuser: function setActiveuser(state, payload) {\n    state.activeuser = payload;\n    var chats = state.chats.find(function (chat) {\n      if (chat.id == payload) return chat;\n    });\n\n    if (!chats) {\n      state.users.find(function (user) {\n        if (user.id == payload) {\n          user.active = \"active\";\n        }\n      });\n      state.chats.push({\n        \"id\": payload,\n        \"users\": [0, payload],\n        \"lastMessageTime\": \"Last seen yesterday 14:14\",\n        \"messages\": []\n      });\n    }\n  },\n  setSerchUsers: function setSerchUsers(state, payload) {\n    state.serchUser = state.all.filter(function (search) {\n      if (search.name.toLowerCase().search(payload.toLowerCase()) != -1 && search.id != 0) return search;\n    });\n  }\n}; // actions\n\nvar actions = {\n  addChat: function addChat(context, payload) {\n    context.commit('addChat', payload);\n    setTimeout(function () {\n      context.commit('addChatResponce');\n    }, 1000);\n  },\n  setActiveuser: function setActiveuser(context, payload) {\n    context.commit('setActiveuser', payload);\n  },\n  searchUser: function searchUser(context, payload) {\n    context.commit('searchUser', payload);\n  },\n  setSerchUsers: function setSerchUsers(context, payload) {\n    context.commit('setSerchUsers', payload);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/kelraf/code_it/vue/spider-ui/spider-ui/src/store/modules/chat.js"],"names":["users","state","all","data","serchUser","chats","chat","activeuser","getters","currentChat","find","id","user","mutations","addChat","payload","today","Date","toLocaleString","hour","minute","hour12","addchat","messages","push","toLowerCase","addChatResponce","setActiveuser","active","setSerchUsers","filter","search","name","actions","context","commit","setTimeout","searchUser","namespaced"],"mappings":"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","sourcesContent":["import users from '../../data/chat'\n\n\nconst state = {\n    all: users.data,\n    users: users.data,\n    serchUser: users.data,\n    chats: users.chat,\n    activeuser:1,\n\n}\n\n// getters\nconst getters = {\n    currentChat: (state) => {\n        var chats = state.chats.find( chat => {\n            if(chat.id == state.activeuser)\n                return chat;\n        });\n        var users = state.users.find( user => {\n            if(user.id == state.activeuser)\n                return user;\n        });\n        return {...users,'chat':chats};\n    }\n}\n\n// mutations\nconst mutations = {\n    addChat: (state, payload) => {\n        var today = new Date().toLocaleString('en-US', {hour: 'numeric', minute: 'numeric', hour12: true});\n        const id = state.activeuser;\n        const addchat = state.chats.find(chat => chat.id == id);\n        addchat.messages.push({\"sender\": 0, \"time\": today.toLowerCase(), \"text\": payload})\n    },\n    addChatResponce: (state) => {\n        var today = new Date().toLocaleString('en-US', {hour: 'numeric', minute: 'numeric', hour12: true});\n        const id = state.activeuser;\n        const addchat = state.chats.find(chat => chat.id == id);\n        addchat.messages.push({\"sender\": id , \"time\": today.toLowerCase(), \"text\": '... I will text you later.'})\n    },\n    setActiveuser: (state, payload) => {\n\n        state.activeuser = payload\n\n        const chats = state.chats.find( chat => {\n            if(chat.id == payload)\n                return chat;\n        });\n        if(!chats) {\n            state.users.find( user => {\n                if(user.id == payload) {\n                    user.active = \"active\"\n                }\n            });\n            state.chats.push({\n                \"id\": payload,\n                \"users\": [\n                    0,\n                    payload\n                ],\n                \"lastMessageTime\": \"Last seen yesterday 14:14\",\n                \"messages\": []\n            })\n        }\n    },\n    setSerchUsers: (state, payload) => {\n        state.serchUser = state.all.filter(function (search) {\n            if (search.name.toLowerCase().search(payload.toLowerCase()) != -1 && search.id !=0)\n                return search\n        })\n    }\n\n\n};\n\n// actions\nconst actions = {\n    addChat: (context, payload) => {\n            context.commit('addChat', payload);\n        setTimeout(function () {\n            context.commit('addChatResponce');\n        },1000)\n\n\n    },\n    setActiveuser: (context, payload) => {\n       context.commit('setActiveuser',payload)\n    },\n    searchUser: (context, payload) => {\n        context.commit('searchUser',payload)\n    },\n    setSerchUsers:(context, payload) => {\n        context.commit('setSerchUsers',payload)\n    }\n\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}